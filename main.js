(()=>{"use strict";const e=document.querySelector("#dropdown"),t=document.createElement("button");t.innerText="I am a button";const n=document.createElement("button");n.innerText="I am a button 2";const a=document.createElement("button");a.innerText="I am a button 3";const s=((e=null,t=[])=>{const n=document.createElement("div");n.className="ddContainer";let a=e;a||(a=document.createElement("div")),n.appendChild(a);const s=document.createElement("div");n.appendChild(s);const r=document.createElement("ul");s.appendChild(r),s.toggleAttribute("hidden"),n.addEventListener("mouseenter",(()=>{s.toggleAttribute("hidden")})),n.addEventListener("mouseleave",(()=>{s.toggleAttribute("hidden")}));const o=t;return o.forEach((e=>{r.appendChild(e)})),{dropdownContainer:n,title:a,elementContainer:s,elementList:r,elements:o,attachTo:(e,t)=>{t.appendChild(e.dropdownContainer)},setTitle:(e,t)=>{e.title.remove(),e.title=t,e.dropdownContainer.insertBefore(e.title,e.elementContainer)},resetElements:e=>{e.elementsContainer.remove(),e.elementContainer=document.createElement("ul"),e.container.appendChild(e.elementsContainer)},addElement:(e,t)=>{e.elements.push(t),e.elementContainer.appendChild(t)}}})(t,[n,a]);s.attachTo(s,e);const r=(e=>{const t=e,n=document.createElement("div");t.appendChild(n),n.className="carousel";const a=document.createElement("div");n.appendChild(a),a.className="carousel-slider-view";const s=document.createElement("div");a.appendChild(s),s.className="carousel-slider";const r=document.createElement("button");n.appendChild(r),r.className="carousel-arrow",r.classList.add("carousel-arrow-left"),r.innerText="<";const o=document.createElement("button");n.appendChild(o),o.className="carousel-arrow",o.classList.add("carousel-arrow-right"),o.innerText=">";const c=document.createElement("div");n.appendChild(c),c.className="carousel-tab-holder";const d=[],i=(e,t)=>{e.tabs[e.currentIndex].classList.toggle("carousel-tab-selected"),e.tabs[t].classList.toggle("carousel-tab-selected"),e.slider.style.right=100*t+"%",e.currentIndex=t,setTimeout((()=>{e.autoAdvanceImage(e)}),5e3),e.timeoutSkips+=1},l={container:n,addImage:(e,t)=>{const n=document.createElement("div");e.slider.appendChild(n);const a=document.createElement("img");n.appendChild(a),a.src=t,a.className="carousel-img",n.className="carousel-img-holder",e.imgs.push(n);const s=document.createElement("button");e.tabHolder.appendChild(s),s.className="carousel-tab",s.innerText="",e.tabs.push(s),1===e.tabs.length&&e.tabs[0].classList.toggle("carousel-tab-selected");const r=d.length-1;s.addEventListener("click",(()=>{e.changeImage(e,r)}))},imgs:[],parent:t,slider:s,tabs:d,tabHolder:c,currentIndex:0,changeImage:i,timeoutSkips:0,autoAdvanceImage:e=>{0===e.timeoutSkips&&(e.currentIndex>=e.imgs.length-1?i(e,0):i(e,e.currentIndex+1)),e.timeoutSkips-=1}};return o.addEventListener("click",(()=>{l.currentIndex>=l.imgs.length-1?i(l,0):i(l,l.currentIndex+1)})),r.addEventListener("click",(()=>{i(l,l.currentIndex<=0?l.tabs.length-1:l.currentIndex-1)})),setTimeout((()=>{l.autoAdvanceImage(l)}),5e3),l})(document.querySelector("#c-container"));["https://i.ytimg.com/vi/bHZVwmiWPNM/maxresdefault.jpg","https://cdnen.samurai-gamers.com/wp-content/uploads/2021/05/16163043/sg-smt-3-nocturne-hd-remaster-thor-demon-boss.jpg","https://static.wikia.nocookie.net/megamitensei/images/4/4b/Jack_frost_transparent.png","https://i.ytimg.com/vi/z0-qFKpktkA/maxresdefault.jpg","https://images.theconversation.com/files/399366/original/file-20210507-23-7ectsj.jpg?ixlib=rb-1.1.0&rect=6%2C343%2C4486%2C2243&q=45&auto=format&w=1356&h=668&fit=crop"].forEach((e=>{r.addImage(r,e)})),(e=>{const t=document.createElement("form");e.appendChild(t);const n=[],a=document.createElement("input");return a.setAttribute("type","submit"),a.addEventListener("click",(e=>{})),t.appendChild(a),{form:t,inputs:n,addEmail:e=>{const s=((e,t,n,a)=>{const s=document.createElement("label");s.innerText=e;const r=document.createElement("input");return s.appendChild(r),r.setAttribute("type","email"),r.toggleAttribute("required"),r.addEventListener("blur",(()=>{var e;(e=r).checkValidity()?e.setCustomValidity(""):e.setCustomValidity("Please enter a valid email address")})),r.addEventListener("focus",(()=>{r.setCustomValidity("")})),{label:s,input:r}})(e);n.push(s),t.insertBefore(s.label,a)}}})(document.querySelector("#sample-form")).addEmail("Email")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,